{"ast":null,"code":"var _jsxFileName = \"/Users/yasaminbayrami/Downloads/Countries-Rest-API-Challenge-master/src/components/CountryInfo/CountryInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiURL } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryInfo = () => {\n  _s();\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const {\n    countryName\n  } = useParams();\n  const borders = country.map(country => country.borders);\n  useEffect(() => {\n    const getCountryByName = async () => {\n      try {\n        const res = await fetch(`${apiURL}/name/${countryName}`);\n        if (!res.ok) throw new Error(\"Could not found!\");\n        const data = await res.json();\n        setCountry(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n    getCountryByName();\n  }, [countryName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"country__info__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading........\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }, this), error && !isLoading && {\n      error\n    }, country === null || country === void 0 ? void 0 : country.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__info__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__info-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: country.flags.png,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: country.name.common\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__info-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Population:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: new Intl.NumberFormat().format(country.population)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Sub Region: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.subregion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\"Capital: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: country.capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(CountryInfo, \"0E2W6eTuax1k4wE8jY8tAA96Dm4=\", false, function () {\n  return [useParams];\n});\n_c = CountryInfo;\nexport default CountryInfo;\nvar _c;\n$RefreshReg$(_c, \"CountryInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","apiURL","Link","jsxDEV","_jsxDEV","CountryInfo","_s","country","setCountry","isLoading","setIsLoading","error","setError","countryName","borders","map","getCountryByName","res","fetch","ok","Error","data","json","message","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","index","src","flags","png","alt","name","common","Intl","NumberFormat","format","population","region","subregion","capital","_c","$RefreshReg$"],"sources":["/Users/yasaminbayrami/Downloads/Countries-Rest-API-Challenge-master/src/components/CountryInfo/CountryInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiURL } from \"../util/api\";\nimport { Link } from \"react-router-dom\";\n\nconst CountryInfo = () => {\n  const [country, setCountry] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const { countryName } = useParams();\n\n  const borders = country.map((country) => country.borders);\n\n  useEffect(() => {\n    const getCountryByName = async () => {\n      try {\n        const res = await fetch(`${apiURL}/name/${countryName}`);\n\n        if (!res.ok) throw new Error(\"Could not found!\");\n\n        const data = await res.json();\n\n        setCountry(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n\n    getCountryByName();\n  }, [countryName]);\n\n  return (\n    <div className=\"country__info__wrapper\">\n      <button>\n        <Link to=\"/\">Back</Link>\n      </button>\n\n      {isLoading && !error && <h4>Loading........</h4>}\n      {error && !isLoading && { error }}\n\n      {country?.map((country, index) => (\n        <div className=\"country__info__container\" key={index}>\n          <div className=\"country__info-img\">\n            <img src={country.flags.png} alt=\"\" />\n          </div>\n\n          <div className=\"country__info\">\n            <h3>{country.name.common}</h3>\n\n            <div className=\"country__info-left\">\n              <h5>\n                Population:{\" \"}\n                <span>\n                  {new Intl.NumberFormat().format(country.population)}\n                </span>\n              </h5>\n              <h5>\n                Region: <span>{country.region}</span>\n              </h5>\n              <h5>\n                Sub Region: <span>{country.subregion}</span>\n              </h5>\n              <h5>\n                Capital: <span>{country.capital}</span>\n              </h5>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CountryInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
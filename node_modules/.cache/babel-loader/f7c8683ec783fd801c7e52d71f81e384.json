{"ast":null,"code":"var _jsxFileName = \"/Users/yasaminbayrami/Downloads/Countries-Rest-API-Challenge-master/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { apiURL } from \"../util/api\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const getAllCountries = async () => {\n    try {\n      const res = await fetch(`${apiURL}/all`);\n      if (!res.ok) throw new Error(\"Something went wrong!\");\n      const data = await res.json();\n      console.log(data);\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByName = async countryName => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`);\n      if (!res.ok) throw new Error(\"Not found any country!\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await fetch(`${apiURL}/region/${regionName}`);\n      if (!res.ok) throw new Error(\"Failed..........\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__country__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          onSearch: getCountryByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n          onSelect: getCountryByRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__bottom\",\n      children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this), countries === null || countries === void 0 ? void 0 : countries.map(country => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/country/${country.name.common}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: country.flags.png,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: country.name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\" \", \"Population:\", \" \", new Intl.NumberFormat().format(country.population)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\" Region: \", country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Capital: \", country.capital]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"fhz3OS7BVETzsc7B/TH4r51GfWQ=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","apiURL","SearchInput","FilterCountry","Link","jsxDEV","_jsxDEV","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","getAllCountries","res","fetch","ok","Error","data","json","console","log","message","getCountryByName","countryName","getCountryByRegion","regionName","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","map","country","to","name","common","src","flags","png","alt","Intl","NumberFormat","format","population","region","capital","_c","$RefreshReg$"],"sources":["/Users/yasaminbayrami/Downloads/Countries-Rest-API-Challenge-master/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { apiURL } from \"../util/api\";\n\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\n\nimport { Link } from \"react-router-dom\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const getAllCountries = async () => {\n    try {\n      const res = await fetch(`${apiURL}/all`);\n\n      if (!res.ok) throw new Error(\"Something went wrong!\");\n\n      const data = await res.json();\n\n      console.log(data);\n\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByName = async (countryName) => {\n    try {\n      const res = await fetch(`${apiURL}/name/${countryName}`);\n\n      if (!res.ok) throw new Error(\"Not found any country!\");\n\n      const data = await res.json();\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByRegion = async (regionName) => {\n    try {\n      const res = await fetch(`${apiURL}/region/${regionName}`);\n\n      if (!res.ok) throw new Error(\"Failed..........\");\n\n      const data = await res.json();\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n\n  return (\n    <div className=\"all__country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName} />\n        </div>\n\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion} />\n        </div>\n      </div>\n\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {countries?.map((country) => (\n          <Link to={`/country/${country.name.common}`}>\n            <div className=\"country__card\">\n              <div className=\"country__img\">\n                <img src={country.flags.png} alt=\"\" />\n              </div>\n\n              <div className=\"country__data\">\n                <h3>{country.name.common}</h3>\n                <h6>\n                  {\" \"}\n                  Population:{\" \"}\n                  {new Intl.NumberFormat().format(country.population)}\n                </h6>\n                <h6> Region: {country.region}</h6>\n                <h6>Capital: {country.capital}</h6>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AllCountries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}